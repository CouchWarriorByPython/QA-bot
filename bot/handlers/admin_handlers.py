from aiogram import Router, F
from aiogram.types import CallbackQuery, BufferedInputFile

from bot.models.callbacks import AdminCallback
from bot.utils.helpers import is_admin
from bot.utils.visualization import generate_pie_chart
from bot.logger import info, warning, error, debug


def register_admin_handlers(router: Router):
    """Register all admin-related handlers"""
    debug("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

    @router.callback_query(AdminCallback.filter(F.action == "all_results"))
    async def all_results_callback(callback_query: CallbackQuery, callback_data: AdminCallback) -> None:
        """Handle button click to show all results"""
        user_id = callback_query.from_user.id
        username = callback_query.from_user.username

        # Only admins can see results
        if not is_admin(user_id):
            warning(
                f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} (@{username}) –Ω–∞–º–∞–≥–∞–≤—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            await callback_query.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó.", show_alert=True)
            return

        info(f"–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä {user_id} (@{username}) –∑–∞–ø—Ä–æ—Å–∏–≤ —É—Å—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏")
        await callback_query.answer()
        await callback_query.message.answer("–ì–µ–Ω–µ—Ä—É—é –¥—ñ–∞–≥—Ä–∞–º–∏ –¥–ª—è –≤—Å—ñ—Ö –ø–∏—Ç–∞–Ω—å...")

        # Send all charts in sequence
        for question_id in range(1, 21):  # Assuming question IDs are 1 through 20
            if question_id not in [15, 17]:
                debug(f"–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥—ñ–∞–≥—Ä–∞–º–∏ –¥–ª—è –ø–∏—Ç–∞–Ω–Ω—è {question_id}")
                chart_buffer, color_data = generate_pie_chart(question_id)

                if not chart_buffer:
                    error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥—ñ–∞–≥—Ä–∞–º—É –¥–ª—è –ø–∏—Ç–∞–Ω–Ω—è {question_id}")
                    await callback_query.message.answer(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥—ñ–∞–≥—Ä–∞–º—É –¥–ª—è –ø–∏—Ç–∞–Ω–Ω—è {question_id}.")
                    continue

                # Send the chart without any caption
                await callback_query.message.answer_photo(
                    BufferedInputFile(chart_buffer.read(), filename=f"question_{question_id}.png")
                )
                info(f"–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥—ñ–∞–≥—Ä–∞–º—É –¥–ª—è –ø–∏—Ç–∞–Ω–Ω—è {question_id}")

                # Format the results data without repeating the question
                results_text = "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:\n\n"
                for line in color_data.split('\n'):
                    if line.strip():
                        results_text += line + "\n"

                await callback_query.message.answer(results_text)

    debug("–û–±—Ä–æ–±–Ω–∏–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ")